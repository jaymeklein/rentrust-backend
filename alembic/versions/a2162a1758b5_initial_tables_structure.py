"""Initial tables structure

Revision ID: a2162a1758b5
Revises: 385712b5fdc7
Create Date: 2025-02-12 21:26:25.965612

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a2162a1758b5'
down_revision: Union[str, None] = '385712b5fdc7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_features_id'), 'features', ['id'], unique=False)
    op.create_table('property_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street_address', sa.String(), nullable=False),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('zip_code', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_addresses_id'), 'property_addresses', ['id'], unique=False)
    op.create_table('real_estate_companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('website', sa.String(length=100), nullable=True),
    sa.Column('registration_number', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('registration_number')
    )
    op.create_index(op.f('ix_real_estate_companies_email'), 'real_estate_companies', ['email'], unique=True)
    op.create_index(op.f('ix_real_estate_companies_id'), 'real_estate_companies', ['id'], unique=False)
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('emergency_contact', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_email'), 'tenants', ['email'], unique=True)
    op.create_index(op.f('ix_tenants_id'), 'tenants', ['id'], unique=False)
    op.create_table('agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('license_number', sa.String(length=50), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['real_estate_companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agents_email'), 'agents', ['email'], unique=True)
    op.create_index(op.f('ix_agents_id'), 'agents', ['id'], unique=False)
    op.create_table('owners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['real_estate_companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_owners_email'), 'owners', ['email'], unique=True)
    op.create_index(op.f('ix_owners_id'), 'owners', ['id'], unique=False)
    op.create_table('properties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('real_state_company_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('HOUSE', 'APARTMENT', 'CONDO', 'TOWNHOUSE', 'VILLA', 'BUNGALOW', 'STUDIO', 'LOFT', 'DUPLEX', 'TRIPLEX', 'PENTHOUSE', 'FARMHOUSE', 'CABIN', 'COTTAGE', 'MANSION', 'RANCH', 'SHED', 'GARAGE', 'BARN', 'WAREHOUSE', 'WORKSHOP', 'GREENHOUSE', 'POOL_HOUSE', 'GUEST_HOUSE', 'BOATHOUSE', 'CARPORT', 'SILO', 'STABLE', 'GUARD_HOUSE', 'OTHER', name='propertytypes'), nullable=False),
    sa.Column('status', sa.Enum('FOR_RENT', 'OCCUPIED', 'UNDER_MAINTENANCE', 'FOR_SALE', 'SOLD', 'PENDING', 'OFF_MARKET', 'DELISTED', 'VACANT', 'RENTED', 'LEASED', 'EXPIRED', 'HOLD', 'ARCHIVED', 'DRAFT', 'INACTIVE', 'RENOVATION', 'PRE_MARKET', 'RESERVED', 'AUCTION', name='propertystatuses'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('size_m2', sa.Float(), nullable=False),
    sa.Column('listed_date', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('year_built', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['property_addresses.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], ),
    sa.ForeignKeyConstraint(['real_state_company_id'], ['real_estate_companies.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_properties_id'), 'properties', ['id'], unique=False)
    op.create_index(op.f('ix_properties_owner_id'), 'properties', ['owner_id'], unique=False)
    op.create_index(op.f('ix_properties_status'), 'properties', ['status'], unique=False)
    op.create_index(op.f('ix_properties_type'), 'properties', ['type'], unique=False)
    op.create_table('property_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('feature_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_features_id'), 'property_features', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_property_features_id'), table_name='property_features')
    op.drop_table('property_features')
    op.drop_index(op.f('ix_properties_type'), table_name='properties')
    op.drop_index(op.f('ix_properties_status'), table_name='properties')
    op.drop_index(op.f('ix_properties_owner_id'), table_name='properties')
    op.drop_index(op.f('ix_properties_id'), table_name='properties')
    op.drop_table('properties')
    op.drop_index(op.f('ix_owners_id'), table_name='owners')
    op.drop_index(op.f('ix_owners_email'), table_name='owners')
    op.drop_table('owners')
    op.drop_index(op.f('ix_agents_id'), table_name='agents')
    op.drop_index(op.f('ix_agents_email'), table_name='agents')
    op.drop_table('agents')
    op.drop_index(op.f('ix_tenants_id'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_email'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_real_estate_companies_id'), table_name='real_estate_companies')
    op.drop_index(op.f('ix_real_estate_companies_email'), table_name='real_estate_companies')
    op.drop_table('real_estate_companies')
    op.drop_index(op.f('ix_property_addresses_id'), table_name='property_addresses')
    op.drop_table('property_addresses')
    op.drop_index(op.f('ix_features_id'), table_name='features')
    op.drop_table('features')
    # ### end Alembic commands ###
